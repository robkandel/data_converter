var toGeoJSON=(function(){var p=(/\s*/g),f=(/^\s*|\s*$/g),g=(/\s+/);function n(t){if(!t||!t.length){return 0}for(var u=0,v=0;u<t.length;u++){v=((v<<5)-v)+t.charCodeAt(u)|0}return v}function q(t,u){return t.getElementsByTagName(u)}function k(t,u){return t.getAttribute(u)}function r(t,u){return parseFloat(k(t,u))}function j(t,v){var u=q(t,v);return u.length?u[0]:null}function d(t){if(t.normalize){t.normalize()}return t}function a(t){for(var u=0,v=[];u<t.length;u++){v[u]=parseFloat(t[u])}return v}function m(t){var v={};for(var u in t){if(t[u]){v[u]=t[u]}}return v}function b(t){if(t){d(t)}return(t&&t.firstChild&&t.firstChild.nodeValue)||""}function c(t){return a(t.replace(p,"").split(","))}function l(t){var w=t.replace(f,"").split(g),x=[];for(var u=0;u<w.length;u++){x.push(c(w[u]))}return x}function s(t){var v=[r(t,"lon"),r(t,"lat")],u=j(t,"ele");if(u){v.push(parseFloat(b(u)))}return v}function i(){return{type:"FeatureCollection",features:[]}}var o;if(typeof XMLSerializer!=="undefined"){o=new XMLSerializer()}else{if(typeof exports==="object"&&typeof process==="object"&&!process.browser){o=new (require("xmldom").XMLSerializer)()}}function e(t){return o.serializeToString(t)}var h={kml:function(H,v){v=v||{};var B=i(),F={},G=["Polygon","LineString","Point","Track"],E=q(H,"Placemark"),I=q(H,"Style"),D=q(H,"StyleMap");for(var z=0;z<I.length;z++){F["#"+k(I[z],"id")]=t(I[z],false)}for(var y=0;y<D.length;y++){F["#"+k(D[y],"id")]=t(D[y],false)}for(var A=0;A<E.length;A++){B.features=B.features.concat(t(E[A],true))}function x(K){var J,L;K=K||"";if(K.substr(0,1)==="#"){K=K.substr(1)}if(K.length===6||K.length===3){J=K}if(K.length===8){L=parseInt(K.substr(0,2),16)/255;J=K.substr(2)}return[J,isNaN(L)?undefined:L]}function u(J){return a(J.split(" "))}function C(J){var K=q(J,"coord","gx"),M=[];for(var L=0;L<K.length;L++){M.push(u(b(K[L])))}return M}function w(N){var L,Q,M,K,J,R=[];if(j(N,"MultiGeometry")){return w(j(N,"MultiGeometry"))}if(j(N,"MultiTrack")){return w(j(N,"MultiTrack"))}for(M=0;M<G.length;M++){Q=q(N,G[M]);if(Q){for(K=0;K<Q.length;K++){L=Q[K];if(G[M]=="Point"){R.push({type:"Point",coordinates:c(b(j(L,"coordinates")))})}else{if(G[M]=="LineString"){R.push({type:"LineString",coordinates:l(b(j(L,"coordinates")))})}else{if(G[M]=="Polygon"){var P=q(L,"LinearRing"),O=[];for(J=0;J<P.length;J++){O.push(l(b(j(P[J],"coordinates"))))}R.push({type:"Polygon",coordinates:O})}else{if(G[M]=="Track"){R.push({type:"LineString",coordinates:C(L)})}}}}}}}return R}function t(aa,U){var Z=w(aa),af,R={},al=b(j(aa,"name")),J=b(j(aa,"styleUrl")),ae=b(j(aa,"StyleMap")),ad=b(j(aa,"description")),ag=j(aa,"TimeSpan"),V=j(aa,"ExtendedData"),K=j(aa,"LineStyle"),O=j(aa,"PolyStyle"),Q=j(aa,"IconStyle");if(U&&!Z.length){return[]}if(al){R.name=al}if(!U){R.id=$(aa).attr("id")}if(J&&F[J]){R.styleUrl=J;R.styles=F[J];if(J+"-hover" in F){R.map=true;R.style_hover=F[J+"-hover"];R.styleUrl_hover=J+"-hover"}}if(ad){R.description=ad}if(ag){var ak=b(j(ag,"begin"));var M=b(j(ag,"end"));R.timespan={begin:ak,end:M}}if(O){var N=x(b(j(O,"color"))),S=N[0],W=N[1],ac=b(j(O,"fill")),P=b(j(O,"outline"));if(S){R.fill=S}if(!isNaN(W)){R["fill-opacity"]=W}if(ac){R["fill-opacity"]=ac==="1"?1:0}if(P){R["stroke-opacity"]=P==="1"?1:0}}if(K){var T=x(b(j(K,"color"))),ab=T[0],L=T[1],Y=parseFloat(b(j(K,"width")));if(ab){R.stroke=ab}if(!isNaN(L)){R["stroke-opacity"]=L}if(!isNaN(Y)){R["stroke-width"]=Y}}if(Q){var ai=b(j(Q,"href"));if(ai){R.icon=ai}}if(V){var aj=q(V,"Data"),ah=q(V,"SimpleData");for(af=0;af<aj.length;af++){R[aj[af].getAttribute("name")]=b(j(aj[af],"value"))}for(af=0;af<ah.length;af++){R[ah[af].getAttribute("name")]=b(ah[af])}if(U&&aj.length==0&&ah.length==0){for(var X=0;X<jQuery(V).children().length;X++){R[jQuery(V).children()[X].nodeName]=jQuery(jQuery(V).children()[X]).text()}}}if(U){return[{type:"Feature",geometry:(Z.length===1)?Z[0]:{type:"GeometryCollection",geometries:Z},properties:R}]}else{return R}}return B}};return h})();